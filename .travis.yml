language: python

python:
  - 2.7
  - 3.3
  - 3.4

sudo: false

env:
  - TDB_TYPE=sqlite PYFARM_DATABASE_URI="sqlite:///:memory:"
  - TDB_TYPE=postgres TDB_DRIVER=psycopg2 PYFARM_DATABASE_URI="postgresql+psycopg2://postgres:@127.0.0.1/pyfarm"
  - TDB_TYPE=mysql TDB_DRIVER="mysql-connector-python --allow-external mysql-connector-python" PYFARM_DATABASE_URI="mysql+mysqlconnector://root:@127.0.0.1/pyfarm"
  - PYLINT=1

matrix:
  fast_finish: true

services:
  - redis-server

before_install:
  - curl -o retry.sh https://raw.githubusercontent.com/pyfarm/pyfarm-build/master/travis/retry.sh
  - source retry.sh
  - if [[ $TDB_DRIVER != "" ]]; then retry pip install $TDB_DRIVER --quiet; fi
  - if [[ $PYLINT == "1" ]]; then retry pip install pylint; fi

install:
  - if [[ $PYLINT != "1" ]]; then retry pip install coverage python-coveralls --quiet; fi
  - if [[ $PYLINT != "1" ]]; then retry pip install git+git://github.com/pyfarm/pyfarm-core.git#egg=pyfarm.core --egg --quiet; fi
  - if [[ $PYLINT != "1" ]]; then retry pip install -e . --egg --quiet; fi

before_script:
  - if [[ $TDB_TYPE == "postgres" ]]; then psql -c "create database pyfarm;" -U postgres; fi
  - if [[ $TDB_TYPE == "mysql" ]]; then mysql -e "create database pyfarm;" --user=root; fi

script:
  - if [[ $PYLINT != "1" ]]; then pip freeze; fi
  - if [[ $PYLINT != "1" ]]; then nosetests --verbose --with-coverage --cover-package=pyfarm.models tests/test_models; fi
  - if [[ $PYLINT != "1" ]]; then mv -v .coverage .coverage.1; fi
  - if [[ $PYLINT != "1" ]]; then nosetests --verbose --with-coverage --cover-package=pyfarm.master tests/test_master; fi
  - if [[ $PYLINT != "1" ]]; then mv -v .coverage .coverage.2; fi
  - if [[ $PYLINT != "1" ]]; then coverage combine; fi
  - if [[ $PYLINT == "1" ]]; then pylint pyfarm --errors-only; fi

after_success:
 - if [[ $PYLINT != "1" ]]; then coveralls; fi
